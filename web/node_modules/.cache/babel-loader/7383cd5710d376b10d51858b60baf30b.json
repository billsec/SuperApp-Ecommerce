{"ast":null,"code":"import _slicedToArray from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _assertThisInitialized from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _classCallCheck from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jiayingsu/Projects/portals-ecommerce-demo-main/web/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from 'tslib';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport React from 'react';\nimport { matchPath as matchPath$1, withRouter, Router } from 'react-router-dom';\nimport { ViewStacks, generateId, IonRoute, ViewLifeCycleManager, StackContext, RouteManagerContext, getConfig, LocationHistory, NavManager } from '@ionic/react';\nimport { Route, matchPath, Router as Router$1 } from 'react-router';\nvar IonRouteInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(IonRouteInner, _React$PureComponent);\n  var _super = _createSuper(IonRouteInner);\n  function IonRouteInner() {\n    _classCallCheck(this, IonRouteInner);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IonRouteInner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Route, {\n        path: this.props.path,\n        exact: this.props.exact,\n        render: this.props.render,\n        computedMatch: this.props.computedMatch\n      });\n    }\n  }]);\n  return IonRouteInner;\n}(React.PureComponent);\nvar ReactRouterViewStack = /*#__PURE__*/function (_ViewStacks) {\n  _inherits(ReactRouterViewStack, _ViewStacks);\n  var _super2 = _createSuper(ReactRouterViewStack);\n  function ReactRouterViewStack() {\n    var _this;\n    _classCallCheck(this, ReactRouterViewStack);\n    _this = _super2.call(this);\n    _this.createViewItem = _this.createViewItem.bind(_assertThisInitialized(_this));\n    _this.findViewItemByRouteInfo = _this.findViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.findLeavingViewItemByRouteInfo = _this.findLeavingViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.getChildrenToRender = _this.getChildrenToRender.bind(_assertThisInitialized(_this));\n    _this.findViewItemByPathname = _this.findViewItemByPathname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(ReactRouterViewStack, [{\n    key: \"createViewItem\",\n    value: function createViewItem(outletId, reactElement, routeInfo, page) {\n      var viewItem = {\n        id: generateId('viewItem'),\n        outletId: outletId,\n        ionPageElement: page,\n        reactElement: reactElement,\n        mount: true,\n        ionRoute: false\n      };\n      var matchProps = {\n        exact: reactElement.props.exact,\n        path: reactElement.props.path || reactElement.props.from,\n        component: reactElement.props.component\n      };\n      var match = matchPath(routeInfo.pathname, matchProps);\n      if (reactElement.type === IonRoute) {\n        viewItem.ionRoute = true;\n        viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n      }\n      viewItem.routeData = {\n        match: match,\n        childProps: reactElement.props\n      };\n      return viewItem;\n    }\n  }, {\n    key: \"getChildrenToRender\",\n    value: function getChildrenToRender(outletId, ionRouterOutlet, routeInfo) {\n      var _this2 = this;\n      var viewItems = this.getViewItemsForOutlet(outletId);\n      // Sync latest routes with viewItems\n      React.Children.forEach(ionRouterOutlet.props.children, function (child) {\n        var viewItem = viewItems.find(function (v) {\n          return matchComponent$1(child, v.routeData.childProps.path || v.routeData.childProps.from);\n        });\n        if (viewItem) {\n          viewItem.reactElement = child;\n        }\n      });\n      var children = viewItems.map(function (viewItem) {\n        var clonedChild;\n        if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n        } else {\n          var match = matchComponent$1(viewItem.reactElement, routeInfo.pathname);\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n          if (!match && viewItem.routeData.match) {\n            viewItem.routeData.match = undefined;\n            viewItem.mount = false;\n          }\n        }\n        return clonedChild;\n      });\n      return children;\n    }\n  }, {\n    key: \"findViewItemByRouteInfo\",\n    value: function findViewItemByRouteInfo(routeInfo, outletId) {\n      var _this$findViewItemByP = this.findViewItemByPath(routeInfo.pathname, outletId),\n        viewItem = _this$findViewItemByP.viewItem,\n        match = _this$findViewItemByP.match;\n      if (viewItem && match) {\n        viewItem.routeData.match = match;\n      }\n      return viewItem;\n    }\n  }, {\n    key: \"findLeavingViewItemByRouteInfo\",\n    value: function findLeavingViewItemByRouteInfo(routeInfo, outletId) {\n      var mustBeIonRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _this$findViewItemByP2 = this.findViewItemByPath(routeInfo.lastPathname, outletId, false, mustBeIonRoute),\n        viewItem = _this$findViewItemByP2.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPathname\",\n    value: function findViewItemByPathname(pathname, outletId) {\n      var _this$findViewItemByP3 = this.findViewItemByPath(pathname, outletId),\n        viewItem = _this$findViewItemByP3.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPath\",\n    value: function findViewItemByPath(pathname, outletId, forceExact, mustBeIonRoute) {\n      var viewItem;\n      var match;\n      var viewStack;\n      if (outletId) {\n        viewStack = this.getViewItemsForOutlet(outletId);\n        viewStack.some(matchView);\n        if (!viewItem) {\n          viewStack.some(matchDefaultRoute);\n        }\n      } else {\n        var viewItems = this.getAllViewItems();\n        viewItems.some(matchView);\n        if (!viewItem) {\n          viewItems.some(matchDefaultRoute);\n        }\n      }\n      return {\n        viewItem: viewItem,\n        match: match\n      };\n      function matchView(v) {\n        if (mustBeIonRoute && !v.ionRoute) {\n          return false;\n        }\n        var matchProps = {\n          exact: forceExact ? true : v.routeData.childProps.exact,\n          path: v.routeData.childProps.path || v.routeData.childProps.from,\n          component: v.routeData.childProps.component\n        };\n        var myMatch = matchPath(pathname, matchProps);\n        if (myMatch) {\n          viewItem = v;\n          match = myMatch;\n          return true;\n        }\n        return false;\n      }\n      function matchDefaultRoute(v) {\n        // try to find a route that doesn't have a path or from prop, that will be our default route\n        if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n          match = {\n            path: pathname,\n            url: pathname,\n            isExact: true,\n            params: {}\n          };\n          viewItem = v;\n          return true;\n        }\n        return false;\n      }\n    }\n  }]);\n  return ReactRouterViewStack;\n}(ViewStacks);\nfunction matchComponent$1(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath(pathname, matchProps);\n  return match;\n}\nfunction clonePageElement(leavingViewHtml) {\n  var html;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    var newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    var ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild;\n  }\n  return undefined;\n}\nvar StackManager = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(StackManager, _React$PureComponent2);\n  var _super3 = _createSuper(StackManager);\n  function StackManager(props) {\n    var _this3;\n    _classCallCheck(this, StackManager);\n    _this3 = _super3.call(this, props);\n    _this3.stackContextValue = {\n      registerIonPage: _this3.registerIonPage.bind(_assertThisInitialized(_this3)),\n      isInOutlet: function isInOutlet() {\n        return true;\n      }\n    };\n    _this3.registerIonPage = _this3.registerIonPage.bind(_assertThisInitialized(_this3));\n    _this3.transitionPage = _this3.transitionPage.bind(_assertThisInitialized(_this3));\n    _this3.handlePageTransition = _this3.handlePageTransition.bind(_assertThisInitialized(_this3));\n    _this3.id = generateId('routerOutlet');\n    return _this3;\n  }\n  _createClass(StackManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.routerOutletElement) {\n        this.setupRouterOutlet(this.routerOutletElement);\n        // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n      this.context.clearOutlet(this.id);\n    }\n  }, {\n    key: \"handlePageTransition\",\n    value: function () {\n      var _handlePageTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(routeInfo) {\n        var _this4 = this;\n        var _a, _b, enteringViewItem, leavingViewItem, enteringRoute;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // If routerOutlet isn't quite ready, give it another try in a moment\n                if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n                  setTimeout(function () {\n                    return _this4.handlePageTransition(routeInfo);\n                  }, 10);\n                } else {\n                  enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n                  leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n                  if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n                    leavingViewItem = this.context.findViewItemByPathname(routeInfo.prevRouteLastPathname, this.id);\n                  }\n                  // Check if leavingViewItem should be unmounted\n                  if (leavingViewItem) {\n                    if (routeInfo.routeAction === 'replace') {\n                      leavingViewItem.mount = false;\n                    } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n                      if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n                        leavingViewItem.mount = false;\n                      }\n                    } else if ((_a = routeInfo.routeOptions) === null || _a === void 0 ? void 0 : _a.unmount) {\n                      leavingViewItem.mount = false;\n                    }\n                  }\n                  enteringRoute = matchRoute((_b = this.ionRouterOutlet) === null || _b === void 0 ? void 0 : _b.props.children, routeInfo);\n                  if (enteringViewItem) {\n                    enteringViewItem.reactElement = enteringRoute;\n                  }\n                  if (!enteringViewItem) {\n                    if (enteringRoute) {\n                      enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n                      this.context.addViewItem(enteringViewItem);\n                    }\n                  }\n                  if (enteringViewItem && enteringViewItem.ionPageElement) {\n                    this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n                  } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n                    // If we have a leavingView but no entering view/route, we are probably leaving to\n                    // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n                    // transition to finish.\n                    // setTimeout(() => {\n                    if (leavingViewItem.ionPageElement) {\n                      leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                      leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                    }\n                    // }, 250);\n                  }\n\n                  this.forceUpdate();\n                }\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function handlePageTransition(_x) {\n        return _handlePageTransition.apply(this, arguments);\n      }\n      return handlePageTransition;\n    }()\n  }, {\n    key: \"registerIonPage\",\n    value: function registerIonPage(page, routeInfo) {\n      var foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      if (foundView) {\n        foundView.ionPageElement = page;\n        foundView.ionRoute = true;\n      }\n      this.handlePageTransition(routeInfo);\n    }\n  }, {\n    key: \"setupRouterOutlet\",\n    value: function () {\n      var _setupRouterOutlet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(routerOutlet) {\n        var _this5 = this;\n        var canStart, onStart;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                canStart = function canStart() {\n                  var config = getConfig();\n                  var swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n                  if (swipeEnabled) {\n                    return _this5.context.canGoBack();\n                  } else {\n                    return false;\n                  }\n                };\n                onStart = function onStart() {\n                  _this5.context.goBack();\n                };\n                routerOutlet.swipeHandler = {\n                  canStart: canStart,\n                  onStart: onStart,\n                  onEnd: function onEnd(_shouldContinue) {\n                    return true;\n                  }\n                };\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      function setupRouterOutlet(_x2) {\n        return _setupRouterOutlet.apply(this, arguments);\n      }\n      return setupRouterOutlet;\n    }()\n  }, {\n    key: \"transitionPage\",\n    value: function () {\n      var _transitionPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(routeInfo, enteringViewItem, leavingViewItem) {\n        var routerOutlet, direction, match, newLeavingElement, runCommit, _runCommit;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _runCommit = function _runCommit3() {\n                  _runCommit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(enteringEl, leavingEl) {\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            enteringEl.classList.add('ion-page');\n                            enteringEl.classList.add('ion-page-invisible');\n                            _context3.next = 4;\n                            return routerOutlet.commit(enteringEl, leavingEl, {\n                              deepWait: true,\n                              duration: direction === undefined ? 0 : undefined,\n                              direction: direction,\n                              showGoBack: !!routeInfo.pushedByRoute,\n                              progressAnimation: false,\n                              animationBuilder: routeInfo.routeAnimation\n                            });\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  return _runCommit.apply(this, arguments);\n                };\n                runCommit = function _runCommit2(_x6, _x7) {\n                  return _runCommit.apply(this, arguments);\n                };\n                routerOutlet = this.routerOutletElement;\n                direction = routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root' ? undefined : routeInfo.routeDirection;\n                if (!(enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement)) {\n                  _context4.next = 23;\n                  break;\n                }\n                if (!(leavingViewItem && leavingViewItem.ionPageElement && enteringViewItem === leavingViewItem)) {\n                  _context4.next = 20;\n                  break;\n                }\n                // If a page is transitioning to another version of itself\n                // we clone it so we can have an animation to show\n                match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n                if (!match) {\n                  _context4.next = 16;\n                  break;\n                }\n                newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n                if (!newLeavingElement) {\n                  _context4.next = 14;\n                  break;\n                }\n                this.routerOutletElement.appendChild(newLeavingElement);\n                _context4.next = 13;\n                return runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n              case 13:\n                this.routerOutletElement.removeChild(newLeavingElement);\n              case 14:\n                _context4.next = 18;\n                break;\n              case 16:\n                _context4.next = 18;\n                return runCommit(enteringViewItem.ionPageElement, undefined);\n              case 18:\n                _context4.next = 23;\n                break;\n              case 20:\n                _context4.next = 22;\n                return runCommit(enteringViewItem.ionPageElement, leavingViewItem === null || leavingViewItem === void 0 ? void 0 : leavingViewItem.ionPageElement);\n              case 22:\n                if (leavingViewItem && leavingViewItem.ionPageElement) {\n                  leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                  leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                }\n              case 23:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function transitionPage(_x3, _x4, _x5) {\n        return _transitionPage.apply(this, arguments);\n      }\n      return transitionPage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      var children = this.props.children;\n      var ionRouterOutlet = React.Children.only(children);\n      this.ionRouterOutlet = ionRouterOutlet;\n      var components = this.context.getChildrenToRender(this.id, this.ionRouterOutlet, this.props.routeInfo, function () {\n        _this6.forceUpdate();\n      });\n      return React.createElement(StackContext.Provider, {\n        value: this.stackContextValue\n      }, React.cloneElement(ionRouterOutlet, {\n        ref: function ref(node) {\n          if (ionRouterOutlet.props.setRef) {\n            ionRouterOutlet.props.setRef(node);\n          }\n          if (ionRouterOutlet.props.forwardedRef) {\n            ionRouterOutlet.props.forwardedRef.current = node;\n          }\n          _this6.routerOutletElement = node;\n          var ref = ionRouterOutlet.ref;\n          if (typeof ref === 'function') {\n            ref(node);\n          }\n        }\n      }, components));\n    }\n  }], [{\n    key: \"contextType\",\n    get: function get() {\n      return RouteManagerContext;\n    }\n  }]);\n  return StackManager;\n}(React.PureComponent);\nfunction matchRoute(node, routeInfo) {\n  var matchedNode;\n  React.Children.forEach(node, function (child) {\n    var matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component\n    };\n    var match = matchPath$1(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node, function (child) {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n  return matchedNode;\n}\nfunction matchComponent(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath$1(pathname, matchProps);\n  return match;\n}\nvar IonRouterInner = /*#__PURE__*/function (_React$PureComponent3) {\n  _inherits(IonRouterInner, _React$PureComponent3);\n  var _super4 = _createSuper(IonRouterInner);\n  function IonRouterInner(props) {\n    var _this7;\n    _classCallCheck(this, IonRouterInner);\n    _this7 = _super4.call(this, props);\n    _this7.exitViewFromOtherOutletHandlers = [];\n    _this7.locationHistory = new LocationHistory();\n    _this7.viewStack = new ReactRouterViewStack();\n    _this7.routeMangerContextState = {\n      canGoBack: function canGoBack() {\n        return _this7.locationHistory.canGoBack();\n      },\n      clearOutlet: _this7.viewStack.clear,\n      findViewItemByPathname: _this7.viewStack.findViewItemByPathname,\n      getChildrenToRender: _this7.viewStack.getChildrenToRender,\n      goBack: function goBack() {\n        return _this7.handleNavigateBack();\n      },\n      createViewItem: _this7.viewStack.createViewItem,\n      findViewItemByRouteInfo: _this7.viewStack.findViewItemByRouteInfo,\n      findLeavingViewItemByRouteInfo: _this7.viewStack.findLeavingViewItemByRouteInfo,\n      addViewItem: _this7.viewStack.add,\n      unMountViewItem: _this7.viewStack.remove\n    };\n    var routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: _this7.props.location.pathname,\n      search: _this7.props.location.search\n    };\n    _this7.locationHistory.add(routeInfo);\n    _this7.handleChangeTab = _this7.handleChangeTab.bind(_assertThisInitialized(_this7));\n    _this7.handleResetTab = _this7.handleResetTab.bind(_assertThisInitialized(_this7));\n    _this7.handleNativeBack = _this7.handleNativeBack.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigate = _this7.handleNavigate.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigateBack = _this7.handleNavigateBack.bind(_assertThisInitialized(_this7));\n    _this7.props.registerHistoryListener(_this7.handleHistoryChange.bind(_assertThisInitialized(_this7)));\n    _this7.handleSetCurrentTab = _this7.handleSetCurrentTab.bind(_assertThisInitialized(_this7));\n    _this7.state = {\n      routeInfo: routeInfo\n    };\n    return _this7;\n  }\n  _createClass(IonRouterInner, [{\n    key: \"handleChangeTab\",\n    value: function handleChangeTab(tab, path, routeOptions) {\n      if (!path) {\n        return;\n      }\n      var routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n      var _path$split = path.split('?'),\n        _path$split2 = _slicedToArray(_path$split, 2),\n        pathname = _path$split2[0],\n        search = _path$split2[1];\n      if (routeInfo) {\n        this.incomingRouteParams = Object.assign(Object.assign({}, routeInfo), {\n          routeAction: 'push',\n          routeDirection: 'none'\n        });\n        if (routeInfo.pathname === pathname) {\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n        } else {\n          this.incomingRouteParams.pathname = pathname;\n          this.incomingRouteParams.search = search ? '?' + search : undefined;\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(pathname + (search ? '?' + search : ''));\n        }\n      } else {\n        this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n      }\n    }\n  }, {\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var _a, _b, _c;\n      var leavingLocationInfo;\n      if (this.incomingRouteParams) {\n        if (this.incomingRouteParams.routeAction === 'replace') {\n          leavingLocationInfo = this.locationHistory.previous();\n        } else {\n          leavingLocationInfo = this.locationHistory.current();\n        }\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n      var leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n      if (leavingUrl !== location.pathname) {\n        if (!this.incomingRouteParams) {\n          if (action === 'REPLACE') {\n            this.incomingRouteParams = {\n              routeAction: 'replace',\n              routeDirection: 'none',\n              tab: this.currentTab\n            };\n          }\n          if (action === 'POP') {\n            var currentRoute = this.locationHistory.current();\n            if (currentRoute && currentRoute.pushedByRoute) {\n              var prevInfo = this.locationHistory.findLastLocation(currentRoute);\n              this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n                routeAction: 'pop',\n                routeDirection: 'back'\n              });\n            } else {\n              this.incomingRouteParams = {\n                routeAction: 'pop',\n                routeDirection: 'none',\n                tab: this.currentTab\n              };\n            }\n          }\n          if (!this.incomingRouteParams) {\n            this.incomingRouteParams = {\n              routeAction: 'push',\n              routeDirection: ((_a = location.state) === null || _a === void 0 ? void 0 : _a.direction) || 'forward',\n              routeOptions: (_b = location.state) === null || _b === void 0 ? void 0 : _b.routerOptions,\n              tab: this.currentTab\n            };\n          }\n        }\n        var routeInfo;\n        if ((_c = this.incomingRouteParams) === null || _c === void 0 ? void 0 : _c.id) {\n          routeInfo = Object.assign(Object.assign({}, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname\n          });\n          this.locationHistory.add(routeInfo);\n        } else {\n          var isPushed = this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward';\n          routeInfo = Object.assign(Object.assign({\n            id: generateId('routeInfo')\n          }, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname,\n            pathname: location.pathname,\n            search: location.search,\n            params: this.props.match.params,\n            prevRouteLastPathname: leavingLocationInfo.lastPathname\n          });\n          if (isPushed) {\n            routeInfo.tab = leavingLocationInfo.tab;\n            routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n          } else if (routeInfo.routeAction === 'pop') {\n            var r = this.locationHistory.findLastLocation(routeInfo);\n            routeInfo.pushedByRoute = r === null || r === void 0 ? void 0 : r.pushedByRoute;\n          } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n            // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n            var lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n            routeInfo.pushedByRoute = lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.pushedByRoute;\n          } else if (routeInfo.routeAction === 'replace') {\n            // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n            var currentRouteInfo = this.locationHistory.current();\n            /**\n             * If going from /home to /child, then replacing from\n             * /child to /home, we don't want the route info to\n             * say that /home was pushed by /home which is not correct.\n             */\n            var currentPushedBy = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pushedByRoute;\n            var pushedByRoute = currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname ? currentPushedBy : routeInfo.pushedByRoute;\n            routeInfo.lastPathname = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pathname) || routeInfo.lastPathname;\n            routeInfo.prevRouteLastPathname = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.lastPathname;\n            routeInfo.pushedByRoute = pushedByRoute;\n            routeInfo.routeDirection = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeDirection) || routeInfo.routeDirection;\n            routeInfo.routeAnimation = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeAnimation) || routeInfo.routeAnimation;\n          }\n          this.locationHistory.add(routeInfo);\n        }\n        this.setState({\n          routeInfo: routeInfo\n        });\n      }\n      this.incomingRouteParams = undefined;\n    }\n    /**\n     * history@4.x uses goBack(), history@5.x uses back()\n     * TODO: If support for React Router <=5 is dropped\n     * this logic is no longer needed. We can just\n     * assume back() is available.\n     */\n  }, {\n    key: \"handleNativeBack\",\n    value: function handleNativeBack() {\n      var history = this.props.history;\n      var goBack = history.goBack || history.back;\n      goBack();\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(path, routeAction, routeDirection, routeAnimation, routeOptions, tab) {\n      this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n        routeAction: routeAction,\n        routeDirection: routeDirection,\n        routeOptions: routeOptions,\n        routeAnimation: routeAnimation,\n        tab: tab\n      });\n      if (routeAction === 'push') {\n        this.props.history.push(path);\n      } else {\n        this.props.history.replace(path);\n      }\n    }\n  }, {\n    key: \"handleNavigateBack\",\n    value: function handleNavigateBack() {\n      var defaultHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n      var routeAnimation = arguments.length > 1 ? arguments[1] : undefined;\n      var config = getConfig();\n      defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref');\n      var routeInfo = this.locationHistory.current();\n      if (routeInfo && routeInfo.pushedByRoute) {\n        var prevInfo = this.locationHistory.findLastLocation(routeInfo);\n        if (prevInfo) {\n          this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n            routeAction: 'pop',\n            routeDirection: 'back',\n            routeAnimation: routeAnimation || routeInfo.routeAnimation\n          });\n          if (routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          /**\n           * We need to exclude tab switches/tab\n           * context changes here because tabbed\n           * navigation is not linear, but router.back()\n           * will go back in a linear fashion.\n           */\n          prevInfo.pathname === routeInfo.pushedByRoute && routeInfo.tab === '' && prevInfo.tab === '') {\n            /**\n             * history@4.x uses goBack(), history@5.x uses back()\n             * TODO: If support for React Router <=5 is dropped\n             * this logic is no longer needed. We can just\n             * assume back() is available.\n             */\n            var history = this.props.history;\n            var goBack = history.goBack || history.back;\n            goBack();\n          } else {\n            this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n          }\n        } else {\n          this.handleNavigate(defaultHref, 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref, 'pop', 'back');\n      }\n    }\n  }, {\n    key: \"handleResetTab\",\n    value: function handleResetTab(tab, originalHref, originalRouteOptions) {\n      var routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n      if (routeInfo) {\n        var newRouteInfo = Object.assign({}, routeInfo);\n        newRouteInfo.pathname = originalHref;\n        newRouteInfo.routeOptions = originalRouteOptions;\n        this.incomingRouteParams = Object.assign(Object.assign({}, newRouteInfo), {\n          routeAction: 'pop',\n          routeDirection: 'back'\n        });\n        this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n      }\n    }\n  }, {\n    key: \"handleSetCurrentTab\",\n    value: function handleSetCurrentTab(tab) {\n      this.currentTab = tab;\n      var ri = Object.assign({}, this.locationHistory.current());\n      if (ri.tab !== tab) {\n        ri.tab = tab;\n        this.locationHistory.update(ri);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RouteManagerContext.Provider, {\n        value: this.routeMangerContextState\n      }, React.createElement(NavManager, {\n        ionRoute: IonRouteInner,\n        ionRedirect: {},\n        stackManager: StackManager,\n        routeInfo: this.state.routeInfo,\n        onNativeBack: this.handleNativeBack,\n        onNavigateBack: this.handleNavigateBack,\n        onNavigate: this.handleNavigate,\n        onSetCurrentTab: this.handleSetCurrentTab,\n        onChangeTab: this.handleChangeTab,\n        onResetTab: this.handleResetTab,\n        locationHistory: this.locationHistory\n      }, this.props.children));\n    }\n  }]);\n  return IonRouterInner;\n}(React.PureComponent);\nvar IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\nvar IonReactRouter = /*#__PURE__*/function (_React$Component) {\n  _inherits(IonReactRouter, _React$Component);\n  var _super5 = _createSuper(IonReactRouter);\n  function IonReactRouter(props) {\n    var _this8;\n    _classCallCheck(this, IonReactRouter);\n    _this8 = _super5.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this8.history = history || createBrowserHistory(rest);\n    _this8.history.listen(_this8.handleHistoryChange.bind(_assertThisInitialized(_this8)));\n    _this8.registerHistoryListener = _this8.registerHistoryListener.bind(_assertThisInitialized(_this8));\n    return _this8;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactRouter;\n}(React.Component);\nvar IonReactMemoryRouter = /*#__PURE__*/function (_React$Component2) {\n  _inherits(IonReactMemoryRouter, _React$Component2);\n  var _super6 = _createSuper(IonReactMemoryRouter);\n  function IonReactMemoryRouter(props) {\n    var _this9;\n    _classCallCheck(this, IonReactMemoryRouter);\n    _this9 = _super6.call(this, props);\n    _this9.history = props.history;\n    _this9.history.listen(_this9.handleHistoryChange.bind(_assertThisInitialized(_this9)));\n    _this9.registerHistoryListener = _this9.registerHistoryListener.bind(_assertThisInitialized(_this9));\n    return _this9;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactMemoryRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router$1, Object.assign({}, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactMemoryRouter;\n}(React.Component);\nvar IonReactHashRouter = /*#__PURE__*/function (_React$Component3) {\n  _inherits(IonReactHashRouter, _React$Component3);\n  var _super7 = _createSuper(IonReactHashRouter);\n  function IonReactHashRouter(props) {\n    var _this10;\n    _classCallCheck(this, IonReactHashRouter);\n    _this10 = _super7.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this10.history = history || createHashHistory(rest);\n    _this10.history.listen(_this10.handleHistoryChange.bind(_assertThisInitialized(_this10)));\n    _this10.registerHistoryListener = _this10.registerHistoryListener.bind(_assertThisInitialized(_this10));\n    return _this10;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactHashRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactHashRouter;\n}(React.Component);\nexport { IonReactHashRouter, IonReactMemoryRouter, IonReactRouter };","map":{"version":3,"mappings":"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","names":["IonRouteInner","React","path","props","exact","render","computedMatch","PureComponent","ReactRouterViewStack","createViewItem","bind","findViewItemByRouteInfo","findLeavingViewItemByRouteInfo","getChildrenToRender","findViewItemByPathname","outletId","reactElement","routeInfo","page","viewItem","id","generateId","ionPageElement","mount","ionRoute","matchProps","from","component","match","matchPath","pathname","type","IonRoute","disableIonPageManagement","routeData","childProps","ionRouterOutlet","viewItems","getViewItemsForOutlet","Children","forEach","children","child","find","v","matchComponent","map","clonedChild","ViewLifeCycleManager","key","removeView","remove","cloneElement","undefined","findViewItemByPath","mustBeIonRoute","lastPathname","forceExact","viewStack","some","matchView","matchDefaultRoute","getAllViewItems","myMatch","url","isExact","params","ViewStacks","node","clonePageElement","leavingViewHtml","html","outerHTML","document","newEl","createElement","innerHTML","style","zIndex","ionBackButton","getElementsByTagName","firstChild","StackManager","registerIonPage","isInOutlet","transitionPage","handlePageTransition","routerOutletElement","setupRouterOutlet","prevProps","context","clearOutlet","commit","setTimeout","enteringViewItem","leavingViewItem","prevRouteLastPathname","routeAction","routeDirection","routeOptions","unmount","enteringRoute","matchRoute","addViewItem","classList","add","setAttribute","forceUpdate","foundView","routerOutlet","canStart","config","getConfig","swipeEnabled","get","mode","canGoBack","onStart","goBack","swipeHandler","onEnd","_shouldContinue","runCommit","enteringEl","leavingEl","deepWait","duration","direction","showGoBack","pushedByRoute","progressAnimation","animationBuilder","routeAnimation","newLeavingElement","appendChild","removeChild","only","components","Provider","value","stackContextValue","ref","setRef","forwardedRef","current","RouteManagerContext","matchedNode","IonRouterInner","exitViewFromOtherOutletHandlers","LocationHistory","locationHistory","clear","handleNavigateBack","unMountViewItem","location","search","handleChangeTab","handleResetTab","handleNativeBack","handleNavigate","registerHistoryListener","handleHistoryChange","handleSetCurrentTab","state","tab","getCurrentRouteInfoForTab","split","incomingRouteParams","Object","history","push","action","leavingLocationInfo","previous","leavingUrl","currentTab","currentRoute","prevInfo","findLastLocation","routerOptions","isPushed","r","lastRoute","currentRouteInfo","currentPushedBy","setState","back","assign","replace","defaultHref","originalHref","originalRouteOptions","getFirstRouteInfoForTab","newRouteInfo","ri","update","routeMangerContextState","NavManager","ionRedirect","stackManager","onNativeBack","onNavigateBack","onNavigate","onSetCurrentTab","onChangeTab","onResetTab","IonRouter","withRouter","displayName","IonReactRouter","rest","createHistory","listen","locationValue","actionValue","historyListenHandler","cb","__rest","Component","IonReactMemoryRouter","Router","IonReactHashRouter"],"sources":["../src/ReactRouter/IonRouteInner.tsx","../src/ReactRouter/ReactRouterViewStack.tsx","../src/ReactRouter/clonePageElement.ts","../src/ReactRouter/StackManager.tsx","../src/ReactRouter/IonRouter.tsx","../src/ReactRouter/IonReactRouter.tsx","../src/ReactRouter/IonReactMemoryRouter.tsx","../src/ReactRouter/IonReactHashRouter.tsx"],"sourcesContent":["import { IonRouteProps } from '@ionic/react';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nexport class IonRouteInner extends React.PureComponent<IonRouteProps> {\n  render() {\n    return (\n      <Route\n        path={this.props.path}\n        exact={this.props.exact}\n        render={this.props.render}\n        computedMatch={(this.props as any).computedMatch}\n      />\n    );\n  }\n}\n","import {\n  IonRoute,\n  RouteInfo,\n  ViewItem,\n  ViewLifeCycleManager,\n  ViewStacks,\n  generateId,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router';\n\nexport class ReactRouterViewStack extends ViewStacks {\n  constructor() {\n    super();\n    this.createViewItem = this.createViewItem.bind(this);\n    this.findViewItemByRouteInfo = this.findViewItemByRouteInfo.bind(this);\n    this.findLeavingViewItemByRouteInfo = this.findLeavingViewItemByRouteInfo.bind(this);\n    this.getChildrenToRender = this.getChildrenToRender.bind(this);\n    this.findViewItemByPathname = this.findViewItemByPathname.bind(this);\n  }\n\n  createViewItem(\n    outletId: string,\n    reactElement: React.ReactElement,\n    routeInfo: RouteInfo,\n    page?: HTMLElement\n  ) {\n    const viewItem: ViewItem = {\n      id: generateId('viewItem'),\n      outletId,\n      ionPageElement: page,\n      reactElement,\n      mount: true,\n      ionRoute: false,\n    };\n\n    const matchProps = {\n      exact: reactElement.props.exact,\n      path: reactElement.props.path || reactElement.props.from,\n      component: reactElement.props.component,\n    };\n\n    const match = matchPath(routeInfo.pathname, matchProps);\n\n    if (reactElement.type === IonRoute) {\n      viewItem.ionRoute = true;\n      viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n    }\n\n    viewItem.routeData = {\n      match,\n      childProps: reactElement.props,\n    };\n\n    return viewItem;\n  }\n\n  getChildrenToRender(outletId: string, ionRouterOutlet: React.ReactElement, routeInfo: RouteInfo) {\n    const viewItems = this.getViewItemsForOutlet(outletId);\n\n    // Sync latest routes with viewItems\n    React.Children.forEach(ionRouterOutlet.props.children, (child: React.ReactElement) => {\n      const viewItem = viewItems.find((v) => {\n        return matchComponent(child, v.routeData.childProps.path || v.routeData.childProps.from);\n      });\n      if (viewItem) {\n        viewItem.reactElement = child;\n      }\n    });\n\n    const children = viewItems.map((viewItem) => {\n      let clonedChild;\n      if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n      } else {\n        const match = matchComponent(viewItem.reactElement, routeInfo.pathname);\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n\n        if (!match && viewItem.routeData.match) {\n          viewItem.routeData.match = undefined;\n          viewItem.mount = false;\n        }\n      }\n\n      return clonedChild;\n    });\n    return children;\n  }\n\n  findViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string) {\n    const { viewItem, match } = this.findViewItemByPath(routeInfo.pathname, outletId);\n    if (viewItem && match) {\n      viewItem.routeData.match = match;\n    }\n    return viewItem;\n  }\n\n  findLeavingViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, mustBeIonRoute = true) {\n    const { viewItem } = this.findViewItemByPath(\n      routeInfo.lastPathname!,\n      outletId,\n      false,\n      mustBeIonRoute\n    );\n    return viewItem;\n  }\n\n  findViewItemByPathname(pathname: string, outletId?: string) {\n    const { viewItem } = this.findViewItemByPath(pathname, outletId);\n    return viewItem;\n  }\n\n  private findViewItemByPath(\n    pathname: string,\n    outletId?: string,\n    forceExact?: boolean,\n    mustBeIonRoute?: boolean\n  ) {\n    let viewItem: ViewItem | undefined;\n    let match: ReturnType<typeof matchPath> | undefined;\n    let viewStack: ViewItem[];\n\n    if (outletId) {\n      viewStack = this.getViewItemsForOutlet(outletId);\n      viewStack.some(matchView);\n      if (!viewItem) {\n        viewStack.some(matchDefaultRoute);\n      }\n    } else {\n      const viewItems = this.getAllViewItems();\n      viewItems.some(matchView);\n      if (!viewItem) {\n        viewItems.some(matchDefaultRoute);\n      }\n    }\n\n    return { viewItem, match };\n\n    function matchView(v: ViewItem) {\n      if (mustBeIonRoute && !v.ionRoute) {\n        return false;\n      }\n      const matchProps = {\n        exact: forceExact ? true : v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch = matchPath(pathname, matchProps);\n      if (myMatch) {\n        viewItem = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n\n    function matchDefaultRoute(v: ViewItem) {\n      // try to find a route that doesn't have a path or from prop, that will be our default route\n      if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n        match = {\n          path: pathname,\n          url: pathname,\n          isExact: true,\n          params: {},\n        };\n        viewItem = v;\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n","import {\n  RouteInfo,\n  RouteManagerContext,\n  StackContext,\n  StackContextState,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\n\nimport { clonePageElement } from './clonePageElement';\n\ninterface StackManagerProps {\n  routeInfo: RouteInfo;\n}\n\ninterface StackManagerState {}\n\nexport class StackManager extends React.PureComponent<StackManagerProps, StackManagerState> {\n  id: string;\n  context!: React.ContextType<typeof RouteManagerContext>;\n  ionRouterOutlet?: React.ReactElement;\n  routerOutletElement: HTMLIonRouterOutletElement | undefined;\n\n  stackContextValue: StackContextState = {\n    registerIonPage: this.registerIonPage.bind(this),\n    isInOutlet: () => true,\n  };\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.registerIonPage = this.registerIonPage.bind(this);\n    this.transitionPage = this.transitionPage.bind(this);\n    this.handlePageTransition = this.handlePageTransition.bind(this);\n    this.id = generateId('routerOutlet');\n  }\n\n  componentDidMount() {\n    if (this.routerOutletElement) {\n      this.setupRouterOutlet(this.routerOutletElement);\n      // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentDidUpdate(prevProps: StackManagerProps) {\n    if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentWillUnmount() {\n    // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n    this.context.clearOutlet(this.id);\n  }\n\n  async handlePageTransition(routeInfo: RouteInfo) {\n    // If routerOutlet isn't quite ready, give it another try in a moment\n    if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n      setTimeout(() => this.handlePageTransition(routeInfo), 10);\n    } else {\n      let enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      let leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n      if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n        leavingViewItem = this.context.findViewItemByPathname(\n          routeInfo.prevRouteLastPathname,\n          this.id\n        );\n      }\n\n      // Check if leavingViewItem should be unmounted\n      if (leavingViewItem) {\n        if (routeInfo.routeAction === 'replace') {\n          leavingViewItem.mount = false;\n        } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n          if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n            leavingViewItem.mount = false;\n          }\n        } else if (routeInfo.routeOptions?.unmount) {\n          leavingViewItem.mount = false;\n        }\n      }\n\n      const enteringRoute = matchRoute(\n        this.ionRouterOutlet?.props.children,\n        routeInfo\n      ) as React.ReactElement;\n      if (enteringViewItem) {\n        enteringViewItem.reactElement = enteringRoute;\n      }\n      if (!enteringViewItem) {\n        if (enteringRoute) {\n          enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n          this.context.addViewItem(enteringViewItem);\n        }\n      }\n      if (enteringViewItem && enteringViewItem.ionPageElement) {\n        this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n      } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n        // If we have a leavingView but no entering view/route, we are probably leaving to\n        // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n        // transition to finish.\n        // setTimeout(() => {\n        if (leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n        // }, 250);\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  registerIonPage(page: HTMLElement, routeInfo: RouteInfo) {\n    const foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n    if (foundView) {\n      foundView.ionPageElement = page;\n      foundView.ionRoute = true;\n    }\n    this.handlePageTransition(routeInfo);\n  }\n\n  async setupRouterOutlet(routerOutlet: HTMLIonRouterOutletElement) {\n    const canStart = () => {\n      const config = getConfig();\n      const swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n      if (swipeEnabled) {\n        return this.context.canGoBack();\n      } else {\n        return false;\n      }\n    };\n\n    const onStart = () => {\n      this.context.goBack();\n    };\n    routerOutlet.swipeHandler = {\n      canStart,\n      onStart,\n      onEnd: (_shouldContinue) => true,\n    };\n  }\n\n  async transitionPage(\n    routeInfo: RouteInfo,\n    enteringViewItem: ViewItem,\n    leavingViewItem?: ViewItem\n  ) {\n    const routerOutlet = this.routerOutletElement!;\n\n    const direction =\n      routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root'\n        ? undefined\n        : routeInfo.routeDirection;\n\n    if (enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement) {\n      if (\n        leavingViewItem &&\n        leavingViewItem.ionPageElement &&\n        enteringViewItem === leavingViewItem\n      ) {\n        // If a page is transitioning to another version of itself\n        // we clone it so we can have an animation to show\n\n        const match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n        if (match) {\n          const newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n          if (newLeavingElement) {\n            this.routerOutletElement.appendChild(newLeavingElement);\n            await runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            this.routerOutletElement.removeChild(newLeavingElement);\n          }\n        } else {\n          await runCommit(enteringViewItem.ionPageElement, undefined);\n        }\n      } else {\n        await runCommit(enteringViewItem.ionPageElement, leavingViewItem?.ionPageElement);\n        if (leavingViewItem && leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n\n    async function runCommit(enteringEl: HTMLElement, leavingEl?: HTMLElement) {\n      enteringEl.classList.add('ion-page');\n      enteringEl.classList.add('ion-page-invisible');\n\n      await routerOutlet.commit(enteringEl, leavingEl, {\n        deepWait: true,\n        duration: direction === undefined ? 0 : undefined,\n        direction: direction as any,\n        showGoBack: !!routeInfo.pushedByRoute,\n        progressAnimation: false,\n        animationBuilder: routeInfo.routeAnimation,\n      });\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const ionRouterOutlet = React.Children.only(children) as React.ReactElement;\n    this.ionRouterOutlet = ionRouterOutlet;\n\n    const components = this.context.getChildrenToRender(\n      this.id,\n      this.ionRouterOutlet,\n      this.props.routeInfo,\n      () => {\n        this.forceUpdate();\n      }\n    );\n\n    return (\n      <StackContext.Provider value={this.stackContextValue}>\n        {React.cloneElement(\n          ionRouterOutlet as any,\n          {\n            ref: (node: HTMLIonRouterOutletElement) => {\n              if (ionRouterOutlet.props.setRef) {\n                ionRouterOutlet.props.setRef(node);\n              }\n              if (ionRouterOutlet.props.forwardedRef) {\n                ionRouterOutlet.props.forwardedRef.current = node;\n              }\n              this.routerOutletElement = node;\n              const { ref } = ionRouterOutlet as any;\n              if (typeof ref === 'function') {\n                ref(node);\n              }\n            },\n          },\n          components\n        )}\n      </StackContext.Provider>\n    );\n  }\n\n  static get contextType() {\n    return RouteManagerContext;\n  }\n}\n\nexport default StackManager;\n\nfunction matchRoute(node: React.ReactNode, routeInfo: RouteInfo) {\n  let matchedNode: React.ReactNode;\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    const matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component,\n    };\n    const match = matchPath(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n\n  return matchedNode;\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","import {\n  AnimationBuilder,\n  LocationHistory,\n  NavManager,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContext,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string; unmount?: boolean };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (\n    cb: (location: HistoryLocation<any>, action: HistoryAction) => void\n  ) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove,\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNativeBack = this.handleNativeBack.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo,\n    };\n  }\n\n  handleChangeTab(tab: string, path?: string, routeOptions?: any) {\n    if (!path) { return; }\n\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab, // TODO this isn't legit if replacing to a page that is not in the tabs\n          };\n        }\n        if (action === 'POP') {\n          const currentRoute = this.locationHistory.current();\n          if (currentRoute && currentRoute.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(currentRoute);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: 'none',\n              tab: this.currentTab,\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab,\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...(this.incomingRouteParams as RouteInfo),\n          lastPathname: leavingLocationInfo.pathname,\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed =\n          this.incomingRouteParams.routeAction === 'push' &&\n          this.incomingRouteParams.routeDirection === 'forward';\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname,\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n\n          /**\n           * If going from /home to /child, then replacing from\n           * /child to /home, we don't want the route info to\n           * say that /home was pushed by /home which is not correct.\n           */\n          const currentPushedBy = currentRouteInfo?.pushedByRoute;\n          const pushedByRoute = (currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname) ? currentPushedBy : routeInfo.pushedByRoute;\n\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo,\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  /**\n   * history@4.x uses goBack(), history@5.x uses back()\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just\n   * assume back() is available.\n   */\n  handleNativeBack() {\n    const history = this.props.history as any;\n    const goBack = history.goBack || history.back;\n    goBack();\n  }\n\n  handleNavigate(\n    path: string,\n    routeAction: RouteAction,\n    routeDirection?: RouterDirection,\n    routeAnimation?: AnimationBuilder,\n    routeOptions?: any,\n    tab?: string\n  ) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab,\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = {\n          ...prevInfo,\n          routeAction: 'pop',\n          routeDirection: 'back',\n          routeAnimation: routeAnimation || routeInfo.routeAnimation,\n        };\n        if (\n          routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          (\n            /**\n             * We need to exclude tab switches/tab\n             * context changes here because tabbed\n             * navigation is not linear, but router.back()\n             * will go back in a linear fashion.\n             */\n            prevInfo.pathname === routeInfo.pushedByRoute &&\n            routeInfo.tab === '' && prevInfo.tab === ''\n          )\n        ) {\n          /**\n           * history@4.x uses goBack(), history@5.x uses back()\n           * TODO: If support for React Router <=5 is dropped\n           * this logic is no longer needed. We can just\n           * assume back() is available.\n           */\n          const history = this.props.history as any;\n          const goBack = history.goBack || history.back;\n          goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider value={this.routeMangerContextState}>\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNativeBack={this.handleNativeBack}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createBrowserHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactRouter extends React.Component<IonReactRouterProps> {\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n  history: History;\n\n  constructor(props: IonReactRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n /**\n  * history@4.x passes separate location and action\n  * params. history@5.x passes location and action\n  * together as a single object.\n  * TODO: If support for React Router <=5 is dropped\n  * this logic is no longer needed. We can just assume\n  * a single object with both location and action.\n  */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n   const locationValue = (location as any).location || location;\n   const actionValue = (location as any).action || action;\n   if (this.historyListenHandler) {\n     this.historyListenHandler(locationValue, actionValue);\n   }\n }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';\nimport React from 'react';\nimport { MemoryRouterProps, Router } from 'react-router';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactMemoryRouterProps extends MemoryRouterProps {\n  history: MemoryHistory;\n}\n\nexport class IonReactMemoryRouter extends React.Component<IonReactMemoryRouterProps> {\n  history: MemoryHistory;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactMemoryRouterProps) {\n    super(props);\n    this.history = props.history;\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createHashHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactHashRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactHashRouter extends React.Component<IonReactHashRouterProps> {\n  history: History;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactHashRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}