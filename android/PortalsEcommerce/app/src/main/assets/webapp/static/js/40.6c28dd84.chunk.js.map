{"version":3,"sources":["ShopAPIPlugin/ShopAPIPluginWeb.ts"],"names":["ShopAPIPluginWeb","sleep","id","subTotal","basket","productId","quantity","fetch","response","json","data","user","result","console","log","picture","WebPlugin","ms","Promise","resolve","setTimeout"],"mappings":"iPAcaA,EAAgB,kHAiCkB,OAjClB,qFAC3B,wGACQC,EAAM,KAAM,KAAD,2BACV,CACLC,GAAI,EACJC,SAAU,MACVC,OAAQ,CAAC,CAAEC,UAAW,EAAGC,SAAU,MACpC,2CACF,kDAR0B,IAQ1B,6EAED,gHACyBC,MAAM,cAAc,KAAD,EAA5B,OAARC,EAAQ,gBACRP,EAAM,KAAM,KAAD,kBACGO,EAASC,OAAM,OAAzB,OAAJC,EAAI,yBACHA,EAAKC,MAAI,2CACjB,kDAPA,IAOA,gFAED,WAAwBA,GAAU,+GAAI,mDAFrC,IAEqC,uEAEtC,WAAeC,GAAsB,2FAC7BX,EAAM,KAAM,KAAD,EACjBY,QAAQC,IAAI,aAAc,CAAEF,WAAU,2CACvC,mDALqC,IAKrC,6EAED,WAAqBA,GAAsB,+GAAI,mDAF9C,IAE8C,6EAE/C,wGACQX,EAAM,KAAM,KAAD,2BACV,CACLc,QAAS,yBACV,2CACF,kDAP8C,IAO9C,6EAED,WAAqBA,GAAoB,+GAAI,mDAF5C,MAE4C,EAjClB,C,MAASC,GAoCtC,SAASf,EAAMgB,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAASF,EAAG,GACzD,C","file":"static/js/40.6c28dd84.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport {\n  User,\n  CheckoutResult,\n  UserPicture,\n  ShopAPIPlugin,\n  Data,\n} from './definitions';\n\n// This is an implementation that allows for usage when Capacitor\n// recognizes it is being ran on the web platform.\n\n// The following implementations in this app are just mocks so that\n// Web developers can write their code outside of the native application\nexport class ShopAPIPluginWeb extends WebPlugin implements ShopAPIPlugin {\n  async getCart() {\n    await sleep(1000);\n    return {\n      id: 1,\n      subTotal: 32.33,\n      basket: [{ productId: 1, quantity: 1 }],\n    };\n  }\n\n  async getUserDetails() {\n    const response = await fetch('/data.json');\n    await sleep(1000);\n    const data = (await response.json()) as Data;\n    return data.user;\n  }\n\n  async updateUserDetails(user: User) {}\n\n  async checkout(result: CheckoutResult) {\n    await sleep(1000);\n    console.log('checkout: ', { result });\n  }\n\n  async checkoutResult(result: CheckoutResult) {}\n\n  async getUserPicture() {\n    await sleep(1000);\n    return {\n      picture: 'images/jt-avatar.png',\n    };\n  }\n\n  async setUserPicture(picture: UserPicture) {}\n}\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"sourceRoot":""}